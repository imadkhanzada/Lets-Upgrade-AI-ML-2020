{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"DAY 33 Assignment.ipynb ","provenance":[],"collapsed_sections":[],"mount_file_id":"1Q_PPdOh6NeDgPFNVgbE4RieRIbp3mIy0","authorship_tag":"ABX9TyMpUFN+hzKR7iIaIKOk4LuX"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"ghi3vXHF73wj"},"source":["\n","**Question 1:**Use User Data set and show the accuracy through the SVM model."]},{"cell_type":"code","metadata":{"id":"5bqEMn5w79FP","executionInfo":{"status":"ok","timestamp":1603350427727,"user_tz":-330,"elapsed":1259,"user":{"displayName":"Imad Khanzada","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GglUSPC1xTBFmnNxhIdCYGqq_23ydifOGEG9nMW=s64","userId":"18384988035224797336"}}},"source":["##importing the Libraries \n","import pandas as pd \n","import numpy as np \n","import matplotlib.pyplot as plt\n","import seaborn as sns"],"execution_count":80,"outputs":[]},{"cell_type":"code","metadata":{"id":"YFfxOwai8g3t","executionInfo":{"status":"ok","timestamp":1603350427730,"user_tz":-330,"elapsed":1235,"user":{"displayName":"Imad Khanzada","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GglUSPC1xTBFmnNxhIdCYGqq_23ydifOGEG9nMW=s64","userId":"18384988035224797336"}}},"source":["userdata=pd.read_csv('/content/drive/My Drive/Colab Notebooks/Datasets/User_Data - Arindam Dev (1).csv')"],"execution_count":81,"outputs":[]},{"cell_type":"code","metadata":{"id":"QEGrgKml9Jsc","executionInfo":{"status":"ok","timestamp":1603350427732,"user_tz":-330,"elapsed":1199,"user":{"displayName":"Imad Khanzada","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GglUSPC1xTBFmnNxhIdCYGqq_23ydifOGEG9nMW=s64","userId":"18384988035224797336"}},"outputId":"6d2113ba-3dc0-4e6d-aa17-5fcf81ec2718","colab":{"base_uri":"https://localhost:8080/","height":297}},"source":["userdata.head(8)"],"execution_count":82,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>User ID</th>\n","      <th>Gender</th>\n","      <th>Age</th>\n","      <th>EstimatedSalary</th>\n","      <th>Purchased</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>15624510</td>\n","      <td>Male</td>\n","      <td>19</td>\n","      <td>19000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>15810944</td>\n","      <td>Male</td>\n","      <td>35</td>\n","      <td>20000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>15668575</td>\n","      <td>Female</td>\n","      <td>26</td>\n","      <td>43000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>15603246</td>\n","      <td>Female</td>\n","      <td>27</td>\n","      <td>57000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>15804002</td>\n","      <td>Male</td>\n","      <td>19</td>\n","      <td>76000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>15728773</td>\n","      <td>Male</td>\n","      <td>27</td>\n","      <td>58000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>15598044</td>\n","      <td>Female</td>\n","      <td>27</td>\n","      <td>84000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>15694829</td>\n","      <td>Female</td>\n","      <td>32</td>\n","      <td>150000</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    User ID  Gender  Age  EstimatedSalary  Purchased\n","0  15624510    Male   19            19000          0\n","1  15810944    Male   35            20000          0\n","2  15668575  Female   26            43000          0\n","3  15603246  Female   27            57000          0\n","4  15804002    Male   19            76000          0\n","5  15728773    Male   27            58000          0\n","6  15598044  Female   27            84000          0\n","7  15694829  Female   32           150000          1"]},"metadata":{"tags":[]},"execution_count":82}]},{"cell_type":"code","metadata":{"id":"x7NlpgoG9Mkg","executionInfo":{"status":"ok","timestamp":1603350427733,"user_tz":-330,"elapsed":1164,"user":{"displayName":"Imad Khanzada","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GglUSPC1xTBFmnNxhIdCYGqq_23ydifOGEG9nMW=s64","userId":"18384988035224797336"}},"outputId":"f794bb76-df47-4c4a-d46c-c80b8ceab10d","colab":{"base_uri":"https://localhost:8080/","height":297}},"source":["data=userdata.drop('Gender', axis=1)\n","data.head(8)"],"execution_count":83,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>User ID</th>\n","      <th>Age</th>\n","      <th>EstimatedSalary</th>\n","      <th>Purchased</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>15624510</td>\n","      <td>19</td>\n","      <td>19000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>15810944</td>\n","      <td>35</td>\n","      <td>20000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>15668575</td>\n","      <td>26</td>\n","      <td>43000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>15603246</td>\n","      <td>27</td>\n","      <td>57000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>15804002</td>\n","      <td>19</td>\n","      <td>76000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>15728773</td>\n","      <td>27</td>\n","      <td>58000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>15598044</td>\n","      <td>27</td>\n","      <td>84000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>15694829</td>\n","      <td>32</td>\n","      <td>150000</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    User ID  Age  EstimatedSalary  Purchased\n","0  15624510   19            19000          0\n","1  15810944   35            20000          0\n","2  15668575   26            43000          0\n","3  15603246   27            57000          0\n","4  15804002   19            76000          0\n","5  15728773   27            58000          0\n","6  15598044   27            84000          0\n","7  15694829   32           150000          1"]},"metadata":{"tags":[]},"execution_count":83}]},{"cell_type":"code","metadata":{"id":"SDN1JP_U9VhX","executionInfo":{"status":"ok","timestamp":1603350427735,"user_tz":-330,"elapsed":1143,"user":{"displayName":"Imad Khanzada","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GglUSPC1xTBFmnNxhIdCYGqq_23ydifOGEG9nMW=s64","userId":"18384988035224797336"}},"outputId":"6e74d802-f672-4ea6-8312-bad59fbbe5fc","colab":{"base_uri":"https://localhost:8080/","height":142}},"source":["x=data.iloc[:,:1]\n","x.head(3)"],"execution_count":84,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>User ID</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>15624510</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>15810944</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>15668575</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    User ID\n","0  15624510\n","1  15810944\n","2  15668575"]},"metadata":{"tags":[]},"execution_count":84}]},{"cell_type":"code","metadata":{"id":"yyVQvmjC9hwW","executionInfo":{"status":"ok","timestamp":1603350427737,"user_tz":-330,"elapsed":1129,"user":{"displayName":"Imad Khanzada","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GglUSPC1xTBFmnNxhIdCYGqq_23ydifOGEG9nMW=s64","userId":"18384988035224797336"}},"outputId":"414780c6-b0d7-40a5-e03e-03596a7182c5","colab":{"base_uri":"https://localhost:8080/","height":142}},"source":["y=data.iloc[:,3:4]\n","y.head(3)"],"execution_count":85,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Purchased</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Purchased\n","0          0\n","1          0\n","2          0"]},"metadata":{"tags":[]},"execution_count":85}]},{"cell_type":"code","metadata":{"id":"QRfzfhOv92TG","executionInfo":{"status":"ok","timestamp":1603350427738,"user_tz":-330,"elapsed":1110,"user":{"displayName":"Imad Khanzada","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GglUSPC1xTBFmnNxhIdCYGqq_23ydifOGEG9nMW=s64","userId":"18384988035224797336"}}},"source":["##Training and the testing the  dataset\n","from sklearn.model_selection import train_test_split\n","xtrain,xtest,ytrain,ytest=train_test_split(x,y,test_size=0.20,random_state=6)"],"execution_count":86,"outputs":[]},{"cell_type":"code","metadata":{"id":"JZNP70of-D7F","executionInfo":{"status":"ok","timestamp":1603350427740,"user_tz":-330,"elapsed":1082,"user":{"displayName":"Imad Khanzada","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GglUSPC1xTBFmnNxhIdCYGqq_23ydifOGEG9nMW=s64","userId":"18384988035224797336"}},"outputId":"3264baa2-8365-43df-dd0f-ea0b16deb3a4","colab":{"base_uri":"https://localhost:8080/","height":153}},"source":["print('\\n xtrain:',xtrain.shape)\n","print('\\n xtest:',xtest.shape)\n","print('\\n ytrain:',ytrain.shape)\n","print('\\n ytest:',ytest.shape)\n"],"execution_count":87,"outputs":[{"output_type":"stream","text":["\n"," xtrain: (320, 1)\n","\n"," xtest: (80, 1)\n","\n"," ytrain: (320, 1)\n","\n"," ytest: (80, 1)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"vr18VrtXHQ4u","executionInfo":{"status":"ok","timestamp":1603350427741,"user_tz":-330,"elapsed":1057,"user":{"displayName":"Imad Khanzada","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GglUSPC1xTBFmnNxhIdCYGqq_23ydifOGEG9nMW=s64","userId":"18384988035224797336"}},"outputId":"3a057c25-7612-4466-e0c0-5b19074899bc","colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["##Scaling down the features using Standard Scaler\n","from sklearn.preprocessing import StandardScaler\n","scaler=StandardScaler()\n","scaler.fit(xtrain)"],"execution_count":88,"outputs":[{"output_type":"execute_result","data":{"text/plain":["StandardScaler(copy=True, with_mean=True, with_std=True)"]},"metadata":{"tags":[]},"execution_count":88}]},{"cell_type":"code","metadata":{"id":"6PJP8Y01Hxzy","executionInfo":{"status":"ok","timestamp":1603350427743,"user_tz":-330,"elapsed":1032,"user":{"displayName":"Imad Khanzada","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GglUSPC1xTBFmnNxhIdCYGqq_23ydifOGEG9nMW=s64","userId":"18384988035224797336"}}},"source":["scaled_xtrain=scaler.fit_transform(xtrain)\n","scaled_xtest=scaler.fit_transform(xtest)"],"execution_count":89,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"ajF9Lkdh-EIo"},"source":["**Importing SVM model**"]},{"cell_type":"code","metadata":{"id":"JW0SwYO8-ET3","executionInfo":{"status":"ok","timestamp":1603350427745,"user_tz":-330,"elapsed":1017,"user":{"displayName":"Imad Khanzada","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GglUSPC1xTBFmnNxhIdCYGqq_23ydifOGEG9nMW=s64","userId":"18384988035224797336"}}},"source":["from sklearn.svm import SVC"],"execution_count":90,"outputs":[]},{"cell_type":"code","metadata":{"id":"E2rzADQa-Y2C","executionInfo":{"status":"ok","timestamp":1603350428124,"user_tz":-330,"elapsed":1378,"user":{"displayName":"Imad Khanzada","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GglUSPC1xTBFmnNxhIdCYGqq_23ydifOGEG9nMW=s64","userId":"18384988035224797336"}},"outputId":"33f481a9-fd04-4ca2-b6d6-d0b56b49c6ee","colab":{"base_uri":"https://localhost:8080/","height":139}},"source":["classifier=SVC(kernel='rbf')\n","classifier.fit(scaled_xtrain,ytrain)"],"execution_count":91,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/sklearn/utils/validation.py:760: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n"],"name":"stderr"},{"output_type":"execute_result","data":{"text/plain":["SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,\n","    decision_function_shape='ovr', degree=3, gamma='scale', kernel='rbf',\n","    max_iter=-1, probability=False, random_state=None, shrinking=True,\n","    tol=0.001, verbose=False)"]},"metadata":{"tags":[]},"execution_count":91}]},{"cell_type":"code","metadata":{"id":"FQ-kGKx--c4U","executionInfo":{"status":"ok","timestamp":1603350428125,"user_tz":-330,"elapsed":1359,"user":{"displayName":"Imad Khanzada","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GglUSPC1xTBFmnNxhIdCYGqq_23ydifOGEG9nMW=s64","userId":"18384988035224797336"}},"outputId":"d4a67c90-f030-4298-a811-048fb7359d56","colab":{"base_uri":"https://localhost:8080/","height":85}},"source":["ypred=classifier.predict(scaled_xtest)\n","ypred"],"execution_count":92,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])"]},"metadata":{"tags":[]},"execution_count":92}]},{"cell_type":"code","metadata":{"id":"iSqfWE2c-k8M","executionInfo":{"status":"ok","timestamp":1603350428128,"user_tz":-330,"elapsed":1341,"user":{"displayName":"Imad Khanzada","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GglUSPC1xTBFmnNxhIdCYGqq_23ydifOGEG9nMW=s64","userId":"18384988035224797336"}}},"source":["##checking for accuracy, confusion matrix , classification report \n","\n","from sklearn.metrics import accuracy_score, confusion_matrix,classification_report\n"],"execution_count":93,"outputs":[]},{"cell_type":"code","metadata":{"id":"5-jn7sIE-9cy","executionInfo":{"status":"ok","timestamp":1603350428130,"user_tz":-330,"elapsed":1321,"user":{"displayName":"Imad Khanzada","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GglUSPC1xTBFmnNxhIdCYGqq_23ydifOGEG9nMW=s64","userId":"18384988035224797336"}},"outputId":"04870c37-7f09-4f4b-fe02-61af252c7add","colab":{"base_uri":"https://localhost:8080/","height":51}},"source":["matrix =confusion_matrix(ytest,ypred)\n","matrix"],"execution_count":94,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[52,  0],\n","       [28,  0]])"]},"metadata":{"tags":[]},"execution_count":94}]},{"cell_type":"code","metadata":{"id":"MsOpy5mLBRwU","executionInfo":{"status":"ok","timestamp":1603350428132,"user_tz":-330,"elapsed":1305,"user":{"displayName":"Imad Khanzada","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GglUSPC1xTBFmnNxhIdCYGqq_23ydifOGEG9nMW=s64","userId":"18384988035224797336"}},"outputId":"724d9523-de17-447f-dfad-52825d1dc919","colab":{"base_uri":"https://localhost:8080/","height":405}},"source":["plt.figure(figsize=(12,6))\n","sns.heatmap(matrix,annot=True)\n","plt.xlabel('Gender')\n","plt.ylabel('Purchased')"],"execution_count":95,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(87.0, 0.5, 'Purchased')"]},"metadata":{"tags":[]},"execution_count":95},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 864x432 with 2 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"uyvZkn_W_RY5","executionInfo":{"status":"ok","timestamp":1603350428134,"user_tz":-330,"elapsed":1289,"user":{"displayName":"Imad Khanzada","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GglUSPC1xTBFmnNxhIdCYGqq_23ydifOGEG9nMW=s64","userId":"18384988035224797336"}},"outputId":"ca6a0e17-a798-4f42-9ebf-a013e8f3fa7b","colab":{"base_uri":"https://localhost:8080/","height":258}},"source":["print(' ---------------Classification Report ----------\\n \\n',classification_report(ytest,ypred))"],"execution_count":96,"outputs":[{"output_type":"stream","text":[" ---------------Classification Report ----------\n"," \n","               precision    recall  f1-score   support\n","\n","           0       0.65      1.00      0.79        52\n","           1       0.00      0.00      0.00        28\n","\n","    accuracy                           0.65        80\n","   macro avg       0.33      0.50      0.39        80\n","weighted avg       0.42      0.65      0.51        80\n","\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/sklearn/metrics/_classification.py:1272: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"BZuDMph1_iuQ","executionInfo":{"status":"ok","timestamp":1603350428135,"user_tz":-330,"elapsed":1273,"user":{"displayName":"Imad Khanzada","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GglUSPC1xTBFmnNxhIdCYGqq_23ydifOGEG9nMW=s64","userId":"18384988035224797336"}},"outputId":"8d6dcc20-a7b4-4227-dc4a-cb8b25ea5397","colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["print('Accuracy:',accuracy_score(ytest,ypred)*100)"],"execution_count":97,"outputs":[{"output_type":"stream","text":["Accuracy: 65.0\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"NaZSjX-0A5H4"},"source":["Here we conclude that 65% of peoples are being able to purchased."]}]}